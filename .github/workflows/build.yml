name: build

on:
  push:
    tags:
      - "v*"


jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-22.04, windows-latest, macos-latest]
        os: [ubuntu-22.04]
        # os: [windows-latest]
        # python-version: ["3.9"]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pybind11[global]

      - name: Install on Ubnutu
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get install xorg-dev

      - name: Build
        run: |
          git submodule update --init --recursive
          cd extern/box2d
          mkdir build
          cd build
          cmake -DBOX2D_BUILD_DOCS=OFF -DBOX2D_BUILD_UNIT_TESTS=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX="./" ..
          cmake --build . --config Release
          cmake --build . --target install --config Release
          cd ../../json
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX="./" ..
          cmake --build .
          cmake --build . --target install
          cd ../../../src
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: simulator-${{runner.os}}-py${{matrix.python-version}}
          path: src/build/simulator.so

  release:
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      -name: Checkout repository
      uses: actions/checkout@v4

      -name: Download artifact
      uses: actions/download-artifact@v4
    
      -name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          VERSION=$(echo "${GITHUB_REF}" | cut -d'/' -f3)
          gh release create ${VERSION} -t "${VERSION}" ./simulator*-py*/simulator.so
