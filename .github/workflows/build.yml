name: build

on:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-22.04, windows-latest, macos-latest]
        os: [windows-latest]
        python-version: ["3.9"]
        # python-version: ["3.9", "3.10", "3.11", "3.12"]

    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pybind11[global]

      - name: Install on Ubnutu
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get install xorg-dev

      - name: Build
        run: |
          git submodule update --init --recursive
          cd extern/box2d
          mkdir build
          cd build
          cmake -DBOX2D_BUILD_DOCS=OFF -DBOX2D_BUILD_UNIT_TESTS=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX="./" ..
          cmake --build . --config Release
          cmake --build . --target install --config Release
          cd ../../json
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX="./" ..
          cmake --build .
          cmake --build . --target install
          cd ../../../src
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{runner.os}}-${{matrix.python-version}}
          path: src/build/simulator.*

  # release:
  #   if: startsWith(github.ref, 'refs/tags/v')
